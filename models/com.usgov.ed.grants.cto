/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace com.usgov.ed.grants

//Concepts

concept Obligation {
  o String granteeId
  o Long allottedAmount
}

// Enums

enum RequestStatus{
  o INITIALIZED // the initial request has been created by the Grantee
  o VALIDATORS_SELECTED // validators have been selected for the request
  o VALIDATION_IN_PROGRESS // one or more of the validators have approved, but not all of them
  o APPROVED // all validators have approved and the request is waiting on Treasury
  o ADJUDICATED // Treasury has approved the request
  o REJECTED // if at any point something is rejected, the overall status changes to rejected
}

//Participants
/**
* A User base class
*/
abstract participant User identified by userId {
  o String userId
  o String pocName
  o String pocEmail
}

/**
* An Education participant
*/
participant Education extends User{
  
}

/**
* A Treasury participant
*/
participant Treasury extends User{

}

/**
* A Grantee participant
*/
participant Grantee extends User {
  o Long grantBalance optional
}

// Assets
asset ActionRequest identified by requestId {
  o String requestId
  o RequestStatus status
  o DateTime createdDate optional
  o Long requestValue
  --> Grantee owner
  o Grantee[] assignedValidators
  o Grantee[] approvedValidators
  o Boolean treasuryValidator
  o String receiptImage optional // the link or pointer/hash for the receipt
  o String receiptHash optional
}

// transactions

transaction SetUpDemo{
  o Long grantBalance
}

transaction CreateGrantee {
  o String userId
  o Long grantBalance optional
  o String pocName
  o String pocEmail
}

transaction CreateEdUser{
  o String userId
  o String pocName
  o String pocEmail
}

transaction CreateTreasury{
  o String userId
  o String pocName
  o String pocEmail
}

transaction ImportGrantee {
  o String userId
  o Long grantBalance
  o String pocName
  o String pocEmail
}

transaction ObligateSlate {
  o Obligation[] slate
}

transaction CreateActionRequest{
  o Long requestValue
  --> Grantee requestor
}

transaction AddValidatingGrantees{
  o Integer validators
  --> ActionRequest request
}

transaction ApproveActionRequest{
  o Boolean approve
  --> Grantee approver
  --> ActionRequest request
}

transaction VerifyActionRequest {
}

// events

event NotifyValidators{
  --> ActionRequest request
}

event NotifyRequestFailure{
  --> ActionRequest request
}

event NotifyRequestSuccess{
  --> ActionRequest request
}

event NotifyDisbursement{

}

event NotifyApprovers {
  --> ActionRequest req
  o String verifierid
}

event NotifyTreasury{
  --> ActionRequest req
}

event ActionRequestMade{
  --> ActionRequest req
}